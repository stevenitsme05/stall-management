extends ./template.pug

block content
	.row
		.col-md-12
			.card
				.card-header
					h4.card-title Reports
				.card-body
					.toolbar
						button#export.btn.btn-round.btn-success(disabled='true' style='display:none') Save as Excel File
						button#pdf.btn.btn-round.btn-danger(disabled='true') Save as PDF File
						button#generate.btn.btn-round.btn-info(disabled='true') Generate Report
					br
					center
						h5 Generate Reports
					.row
						.col-md-2
							.form-group
								label Generate Report For:
								select#generateReport.form-control.selectpicker(data-style='select-with-transition btn-primary btn-round' title='Select')
									option(value='0') Lessee Payments
									option(value='1') Expiring Contracts
									option(value='2') Profit
						.col-md-2.hiddenColumn(style='display:none')
							.form-group
								label Filter by:
								select#filter.form-control.selectpicker(disabled='true' data-style='select-with-transition btn-primary btn-round' title='Select')
						.col-md-2.hiddenColumn(style='display:none')
							.form-group
								label Number of rows:
								select#filterRows.form-control.selectpicker(disabled='true' data-style='select-with-transition btn-primary btn-round' title='Select')
									option(value='5') 5
									option(value='10') 10
									option(value='12') 12
					table#reportsTable.table.table-bordered.table-striped(cellspacing='0' style='display:none')
block contentScript
	script(src='/assets/plugins/SheetJS/FileSaver.js')
	script(src='/assets/plugins/SheetJS/xlsx.full.min.js')
	script(src='/assets/plugins/pdfmake/pdfmake.min.js')
	script(src='/assets/plugins/pdfmake/vfs_fonts.js')
	script.
		$(document).ready(function(){
			$('#pdf').on('click', function(){
				let pdfBody = []
				let pdfWidth = []
				let pdfHead = []
				const widthPerCol = eval(`100/${$('#reportsTable').children('thead').find('th').length}`).toFixed(2)
				for(let i = 0; i < $('#reportsTable').children('thead').find('th').length; i++){
					pdfWidth.push(`${widthPerCol}%`)
					pdfHead.push({
						text: $('#reportsTable').children('thead').find('th').eq(i)[0].innerText, 
						bold:true, 
						alignment: 'center'
					})
					if(i == $('#reportsTable').children('thead').find('th').length - 1){
						pdfBody.push(pdfHead)
						for(let j = 0; j < $('#reportsTable').children('tbody').children('tr').length; j++){
							let rowNow = []
							for(let k = 0; k < $('#reportsTable').children('tbody').children('tr').eq(j).find('td').length; k++){
								rowNow.push({
									text: $('#reportsTable').children('tbody').children('tr').eq(j).find('td').eq(k)[0].innerText, 
									alignment: 'center'
								})
								if(k == $('#reportsTable').children('tbody').children('tr').eq(j).find('td').length - 1){
									pdfBody.push(rowNow)
								}
							}
							if(j == $('#reportsTable').children('tbody').children('tr').length - 1){
								const exportPdf = {	
									content: [
										{text: '\n\nEXTRAORDINARY PROPERTY MANAGEMENT CORPORATION', style: 'header', bold: true, alignment: 'center'},
										{text: 'Amvel Business Park, Brgy. San Dionisio Sucat, Paranaque', style: 'subheader', alignment: 'center'},
										{text: '\n\n\n\n\nREPORTS\n\n', style: 'header', bold: true, alignment: 'center'},
										{
											table:{
												widths: pdfWidth,
												body:pdfBody
											}
										},
										{text: '\n\n\n\n\nPrepared by:\t\t\t\t\t\t\t\t\Checked & Verified by:\t\t\t\t\t\t\tApproved by:',bold: true, alignment: 'center'},
										{text: '\n\nRowena Olan\t\t\t\t\t\t\t\t\tSherry V. Yambao\t\t\t\t\t\t\t\tBelen Velarde',bold: true, alignment: 'center'},
										{text: '\nAccounting Officer\t\t\t\t\t\t\t\t\tVP Finance\t\t\t\t\t\t\t\t\tAccounting Head\n\n\n',bold: true, alignment: 'center'},
									]
								}
								pdfMake.createPdf(exportPdf).open()
								pdfMake.createPdf(exportPdf).download(`reports-${Date.now()}.pdf`)
							}
						}
					}
				}
			})
			$('.selectpicker').selectpicker()
			$('#generateReport').on('change', function(){
				$('#generate').prop('disabled', true)
				$('.hiddenColumn').fadeOut(1000)
				if($(this).val() == 0 || $(this).val() == 1){
					$('#generate').prop('disabled', false)
				}
				else{
					$('#filter').append(`
						<option value="monthly">Monthly</option>
						<option value="yearly">Yearly</option>
					`)
					$('#filter').prop('disabled', false)
					$('#filter').selectpicker('refresh')
					$('.hiddenColumn').fadeIn(1000)
				}
			})
			$('#filter').on('change', function(){
				$('#filterRows').prop('disabled', false)
				$('#filterRows').selectpicker('refresh')
			})
			$('#filterRows').on('change', function(){
				$('#generate').prop('disabled', false)
			})
			$('#generate').on('click', function(){
				$('#export').prop('disabled', false)
				$('#pdf').prop('disabled', false)
				$('#reportsTable').fadeOut(1000).promise().then(function(){
					$('#reportsTable').empty()
					if($('#generateReport').val() == 0){
						$.post('/admin/get-due-payments').done(function(data){
							$('#reportsTable').append(`
								<thead>	
									<tr>
										<th>Stall ID</th>
										<th>Stall Name</th>
										<th>Bill Type</th>
										<th>Amount Due</th>
										<th>Status</th>
									</tr>
								</thead>
								<tbody id='reportsTableBody'>
								</tbody>
							`)
							for(let u = 0; u < data.length; u++){
								let billType = ''
								let amountDue = 0
								if(data[u].intTotalKwhUsage){
									billType = 'Electric'
									amountDue = data[u].dblAmountDue + data[u].dblAdminFee
								}
								else if(data[u].intTotalCubicMeterUsage){
									billType = 'Water'
									amountDue = data[u].dblAmountDue + data[u].dblAdminFee
								}
								else{
									billType = 'Rental'
									amountDue = data[u].dblAmountDue
								}
								$('#reportsTableBody').append(`
									<tr>
										<td>${data[u].strStallId}</td>
										<td>${data[u].strContractStallDescription}</td>
										<td>${billType}</td>
										<td>${amountDue}</td>
										<td>${data[u].strPaymentReferenceNo == null ? `Not Paid`: `Paid`}</td>
									</tr>
								`)
								if(u == data.length - 1){
									$('#reportsTable').fadeIn(1000)
									var wb = XLSX.utils.table_to_book($('#reportsTable')[0], {sheet:"Sheet JS"});
									var wbout = XLSX.write(wb, {bookType:'xlsx', bookSST:true, type: 'binary'});
									function s2ab(s) {
										var buf = new ArrayBuffer(s.length);
										var view = new Uint8Array(buf);
										for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
										return buf;
									}
									$("#export").on('click', function(){
										saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), `reports-${moment().format('YYYY')}.xlsx`);
									});
								}
							}
						})
					}
					else if($('#generateReport').val() == 1){
						$.post('/admin/get-expiring-contracts').done(function(data){
							$('#reportsTable').append(`
								<thead>
									<tr>
										<th>Stall ID</th>
										<th>Contract ID</th>
										<th>Stall Name</th>
										<th>Lessee Name</th>
										<th>Contract End Date</th>
									</tr>
								</thead>
								<tbody id="reportsTableBody"></tbody>
							`)
							for(let w = 0; w < data.length; w++){
								$('#reportsTableBody').append(`
									<tr>
										<td>${data[w].strStallId}</td>
										<td>${data[w].intId}</td>
										<td>${data[w].strContractStallDescription}</td>
										<td>${data[w].strFirstName} ${data[w].strMiddleName} ${data[w].strLastName}</td>
										<td>${moment(`${data[w].intContractYear}-${data[w].intContractMonth}-${data[w].intContractDay}`).add(data[w].intContractDuration, 'months').format('YYYY-MM-DD')}</td>
									</tr>
								`)
								if(w == data.length - 1){
									$('#reportsTable').fadeIn(1000)
									var wb = XLSX.utils.table_to_book($('#reportsTable')[0], {sheet:"Sheet JS"});
									var wbout = XLSX.write(wb, {bookType:'xlsx', bookSST:true, type: 'binary'});
									function s2ab(s) {
										var buf = new ArrayBuffer(s.length);
										var view = new Uint8Array(buf);
										for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
										return buf;
									}
									$("#export").on('click', function(){
										saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), `reports-${moment().format('YYYY')}.xlsx`);
									});
								}
							}
						})
					}
					else if($('#generateReport').val() == 2){
						$.post('/admin/reports/revenue', {
							filter: $('#filter').val(),
							rows: $('#filterRows').val()
						}).done(function(data){
							$('#reportsTable').append(`
								<thead>
									<tr>
										<th>${$('#filter').val() == 'monthly' ? 'Month': 'Year'}</th>
										<th>Revenue</th>
									</tr>
								</thead>
								<tbody id='reportsTableBody'>
								</tbody>
							`)
							for(let a = 0; a < data.length; a++){
								$('#reportsTableBody').append(`
									<tr>
										<td>${data[a].filterHead}</td>
										<td>${data[a].revenue}</td>
									</tr>
								`)
								if(a == data.length - 1){
									$('#reportsTable').fadeIn(1000)
									var wb = XLSX.utils.table_to_book($('#reportsTable')[0], {sheet:"Sheet JS"});
									var wbout = XLSX.write(wb, {bookType:'xlsx', bookSST:true, type: 'binary'});
									function s2ab(s) {
										var buf = new ArrayBuffer(s.length);
										var view = new Uint8Array(buf);
										for (var i=0; i<s.length; i++) view[i] = s.charCodeAt(i) & 0xFF;
										return buf;
									}
									$("#export").on('click', function(){
										saveAs(new Blob([s2ab(wbout)],{type:"application/octet-stream"}), `reports-${moment().format('YYYY')}.xlsx`);
									});
								}
							}
						})
					}
				})
			})
		})
