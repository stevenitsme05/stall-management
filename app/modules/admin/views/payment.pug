extends ./template.pug

block contentStyle
	style.
		.remove-bill{
			color: rgba(191, 65, 65, 0.7);
			text-decoration: none;
			text-transform: uppercase;
			float: right;
			font-weight: bold;
		}
		.remove-bill:hover{
			color: #bf4141;
			text-decoration: none;
		}

block content
	.row
		.col-md-12
			.card
				.card-header
					h4.card-title Payments
				.card-body
					.toolbar
						button.btn.btn-round.btn-success(data-toggle='modal' data-target='#addPaymentModal') + Add Payment
					br
					table#stallTable.table.table-bordered.table-striped(cellspacing='0')
						thead
							tr
								th Reference Code
								th Payment Date
								th Amount Paid
								th Actions
						tbody
							each payment in payments
								tr
									td #{payment.strReferenceNo}
									td #{payment.datDatePaid}
									td Php #{payment.dblAmountPaid}
									td 
										a.btn.btn-round.btn-info.btn-icon.viewPayment(href='javascript:void(0)' refCode=`${payment.strReferenceNo}`)
											i.now-ui-icons.ui-1_zoom-bold
	#addPaymentModal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
		.modal-dialog(role='document')
			.modal-content
				.modal-header
					h5.modal-title Add Payment
					button.close(type='button', data-dismiss='modal', aria-label='Close')
						span(aria-hidden='true') ×
				.modal-body
					#addPaymentModalBody
						.form-group.billInfo
							label Pay for:
								small.text-danger  *
							br
							select.form-control.selectpicker.paymentFor(data-style='select-with-transition btn-primary btn-round' title='Select')
								option(value='W' selected) Water Bill
								option(value='E') Electricity Bill
								option(value='R') Rental Bill
							label Bill Reference Code
								small.text-danger  *
							input.form-control.billCode(type="text" placeholder="Enter Bill Code" valid='false')
							label Bill Amount Due
								small.text-danger  *
							input.amountDue.form-control(type="number" placeholder="Bill Amount Due" value='0' readonly)
					hr
					.row
						.col-md-6
							label
								h6 Total Amount Due
							input#totalAmountDue.form-control(type="number" placeholder="Enter Amount Due" value='0' readonly)
						.col-md-6
							label
								h6 Amount Paid
							input#amountPaid.form-control(type="number" placeholder="Enter Amount Paid")
				.modal-footer
					button#addPaymentSave.btn.btn-primary(type='submit') Save
					button#addPaymentButton.btn.btn-success + Another Bill
	#viewPaymentModal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
		.modal-dialog.modal-lg(role='document')
			.modal-content
				.modal-header
					h5.modal-title Add Payment
					button.close(type='button', data-dismiss='modal', aria-label='Close')
						span(aria-hidden='true') ×
				.modal-body
					.table-responsive
						table.table
							thead
								tr
									th Bill Type
									th Bill Reference Code
							tbody#viewPaymentModalTableBody
block contentScript
	script(src='/assets/plugins/pdfmake/pdfmake.min.js')
	script(src='/assets/plugins/pdfmake/vfs_fonts.js')
	script.
		$(document).ready(function(){
			$('#stallTable').dataTable()
			$('#addPaymentButton').on('click', function(){
				$('#addPaymentModalBody').append(`<div class="form-group billInfo">
						<br />
						<a class="remove-bill" href="javascript:">Remove</a>
						<label>Pay for:<small class="text-danger"> *</small></label><br />
						<select class="form-control selectpicker paymentFor" data-style="select-with-transition btn-primary btn-round" title="Select">
							<option selected value="W">Water Bill
							<option value="E">Electricity Bill</option>
							<option value="R">Rental Bill</option>
						</select>
						<label>Bill Reference Code<small class="text-danger"> *</small></label>
						<input class="form-control billCode" type="text" placeholder="Enter Bill Code" valid='false'/>
						<label>Bill Amount Due<small class="text-danger"> *</small></label>
						<input class="form-control amountDue" type="number" placeholder="Enter Amount Due" value='0' readonly/>
					</div>`
				)
				$('.selectpicker').selectpicker()
			})
			$(document).on('change', '.billCode', function(){
				let billInput = $(this)
				if(billInput.val() == ''){
					return;
				}
				$.post('/admin/get-bill-amount', {
					bill: $(this).siblings('.paymentFor').children('select').val(),
					billCode: $(this).val()
				}).done(function(data){
					if(data.valid){
						billInput.siblings('.amountDue').val(data.amountDue)
						billInput.attr('valid', 'true')
						billInput.siblings('.amountDue').trigger('change')
					}
					else{
						swal({
							title: `Invalid Input`,
							text: `${data.message}`,
							type: 'error'
						})
						billInput.siblings('.amountDue').val('0')
						billInput.attr('valid', 'false')
						billInput.siblings('.amountDue').trigger('change')
						billInput.val('')
					}
				})
			})
			$(document).on('change', '.paymentFor', function(){
				$(this).siblings('.billCode').val('')
			})
			$(document).on('change', '.amountDue', function(){
				let amounts = $('.amountDue')
				let totalAmount = 0;
				for(let i=0; i< amounts.length; i++){
					totalAmount = eval(`${totalAmount}+${amounts.eq(i).val()}`)
				}
				$('#totalAmountDue').val(totalAmount)
			})
			$(document).on('click', '.remove-bill', function (){
				$(this).parents('.form-group').remove()
				$('.amountDue').trigger('change')
			})
			$('#addPaymentSave').on('click', function(){
				const billInfos = $('.billInfo')
				const finalInfo = []

				for(let i = 0; i<billInfos.length; i++){
					if(billInfos.eq(i).find('.billCode').attr('valid') == 'true'){
						for(let g = 0; g<finalInfo.length; g++){
							if(finalInfo[g].billType == billInfos.eq(i).find('select.paymentFor').val() && finalInfo[g].billCode == billInfos.eq(i).find('.billCode').val()){
								return swal({
									title: `Invalid Input`,
									text: `You cannot duplicate pay a bill`,
									type: 'error'
								})
							}
						}
						finalInfo.push({
							billType: billInfos.eq(i).find('select.paymentFor').val(),
							billCode: billInfos.eq(i).find('.billCode').val()
						})
					}
					else{
						swal({
							title: `Invalid Input`,
							text: `One of your bills is not valid, please check`,
							type: 'error'
						})
					}
					if(i == billInfos.length-1){
						if(parseInt($('#amountPaid').val()) >= parseInt($('#totalAmountDue').val())){
							$.post('/admin/add-payment', {data: finalInfo, amountPaid: $('#totalAmountDue').val()})
							.done(function(){
								$.post('/admin/get-word-value', {
									number: $('#totalAmountDue').val()
								}).done(function(data){
									let paymentArray = [
										{text:'as partial/full payment for '}
									]
									for(let i = 0; i < finalInfo.length; i ++){
										let billFor
										if(finalInfo[i].billType == 'R'){
											billFor = 'Rental'
										}
										else if(finalInfo[i].billType == 'W'){
											billFor = 'Water'
										}
										else if(finalInfo[i].billType == 'E'){
											billFor = 'Electricity'
										}
										if(i == finalInfo.length - 1){
											paymentArray.push({
												text: `${billFor} Bill No. ${finalInfo[i].billCode}`
											})
										}
										else{
											paymentArray.push({
												text: `${billFor} Bill No. ${finalInfo[i].billCode} and `
											})
										}
									}
									const receipt = {
										content: [
											{
												text: 'ACKNOWLEDGEMENT RECEIPT\n\n\n', bold:true, alignment: 'center'
											},
											{
												text:[
													{text:'Date:', alignment: 'right'},
													{text:`${moment().format('YYYY-MM-DD')}\n\n\n`, alignment: 'right', decoration: 'underline'},
												]
											},
											{
												text:[
													{text:'The amount of: '},
													{text:`${data.wordValue} ( P ${parseFloat($('#totalAmountDue').val()).toFixed(2)} )\n\n`, decoration: 'underline'},
												]
											},
											{
												text: paymentArray
											},
											{
												text:'__________________________\n\n', alignment: 'right'
											},
											{
												text:'Authorized   Signature\n\n', alignment: 'right'
											},
										]
									}
									if(parseInt($('#amountPaid').val()) > parseInt($('#totalAmountDue').val())){
										swal({
											title: `Change Amount`,
											text: `Change amount is ${eval($('#amountPaid').val()+'-'+$('#totalAmountDue').val())}`,
											type: 'info'
										}).then(value => {
											if(value){
												pdfMake.createPdf(receipt).open()
												location.href = '/admin/payment'
											}
										})
									}
									else{
										pdfMake.createPdf(receipt).open()
										location.href = '/admin/payment'
									}
								})
							})
						}
						else{
							swal({
								title: `Amount Paid is Insufficient`,
								text: `Amount paid should be greater than or equal to the amount due`,
								type: 'error'
							})
						}
					}
				}
			})
			$('.viewPayment').on('click', function(){
				$.post('/admin/get-payment-child', {
					paymentRef: $(this).attr('refCode')
				}).done(function(data){
					for(let m = 0; m<data.payments.length; m++){
						let billType = '';
						if(data.payments[m].strBillType === 'R')
							billType = 'Rental'
						else if(data.payments[m].strBillType === 'W')
							billType = 'Water'
						else if(data.payments[m].strBillType === 'E')
							billType = 'Electricity'
						$('#viewPaymentModalTableBody').append(`
							<tr>
								<td>${billType}</td>
								<td>${data.payments[m].intBillId}</td>
							</tr>`
						)
					}
					$('#viewPaymentModal').modal('show')
				})
			})
			$('#viewPaymentModal').on('hidden.bs.modal', function(){
				$('#viewPaymentModalTableBody').empty()
			})
		})
